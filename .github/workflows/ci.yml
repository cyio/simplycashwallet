name: Build Android and Release

on:
  push:
    tags:
      - "v*"
      # - 'v[0-9]+.[0-9]+.[0-9]+'
jobs:
  build:
    name: Build APK
    runs-on: macos-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '8'

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install Cordova
        run: npm install -g cordova@10.0.0

      - name: Install Ionic
        run: npm install -g @ionic/cli@6.17.1

      - name: Install app dependencies
        run: npm install

      - name: Add Android platform
        run: ionic cordova platform add android
        # run: ionic cordova prepare android

      - name: Build Android Dev APK
        run: ionic cordova build android --prod

      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: apk_artifact
          path: platforms/android/app/build/outputs/apk/debug/app-debug.apk

  release:
    name: Release APK
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: apk_artifact
      - name: Extract tag name
        id: tag
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            return context.payload.ref.replace(/\/refs\/tags\//, '');
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: true
          tag_name: ${{ steps.tag.outputs.result || github.run_number }}
          release_name: ${{ github.event.repository.name }}x ${{ steps.tag.outputs.result || github.run_number }}
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apk_artifact/app-debug.apk
          asset_name: ${{ github.event.repository.name }}x.apk
          asset_content_type: application/zip
